package com.company.dsajava.LINKEDLIST;

public class Doubly_CUSTOM_LINKEDLIST {
     private Node head;
     public void insertfirst(int val){
         Node node = new Node(val);
         node.next=head;
         node.prev=null;
         if(head!=null){
             head.prev=node;
         }
         head=node;
     }
     public void insertlast(int val){
         Node node = new Node(val);
         Node tem=head;
         node.next=null;
         if(head==null){
             node.prev=null;
             head=node;
             return;
         }
         while(tem.next!=null){
             tem=tem.next;
         }
         tem.next=node;
         node.prev=tem;
     }
     public void insert(int val,int index){
         if(index==0){
             insertfirst(val);
             return;
         }
         Node temp=head;
         for (int i = 1; i <index ; i++) {
             temp=temp.next;
         }
         Node node = new Node(val);
         node.next=temp.next;
         temp.next=node;
         node.prev=temp;
     }
     
      public void insertafter(int after, int val){
         Node p=find(after);
         if(p==null){
             System.out.println("Does Not Exist");
             return;
         }
         Node node = new Node(val);
         node.next=p.next;
         p.next=node;
         node.prev=p;
         if(node.next!=null){
             node.next.prev=node;
         }
     }
    public Node find(int value){
        Node node = head;
        while(node!=null){
            if(node.val== value){
                return node;
            }
            node=node.next;
        }
        return null;
    }
     public int deletefirst(){
         int value=head.val;
         head=head.next;
         if(head==null){
             return -1;
         }
         return value;
     }
