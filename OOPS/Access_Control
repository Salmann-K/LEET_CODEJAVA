package com.company.dsajava.OOPS;

public class ACCESSCONTROL {

}
class a{
    private int n;
    protected String s;
    int [] arr;
    // If There Is No Access modifier Then It Is Default Which Means It Can be Accessed Within The Package
    public a(int n, String s) {
        this.n = n;
        this.s = s;
        this.arr = new int[n];
    }
    public int getN() {
        return n;
    }
    public void setN(int n) {
        this.n = n;
    }

    public static void main(String[] args) {

        a obj = new a(10,"Salman");
        //obj.n; Cant Access It Directly because Its Private can Access Using Getter And Setter
        System.out.println(obj.s);

    }
}

class sub extends a{

    sub(int n , String s){
        super(n,s);
    }

    public static void main(String[] args) {
        sub b = new sub(35,"Salman");
        int a= b.getN();
        String ba=b.s;
    }
}


class Objectdemo{
    int num;
    float n;
//    public Objectdemo(int num) {
//        this.num = num;
//    }

    public Objectdemo(int num,float n) {
        this.num = num;
        this.n=n;
    }

    @Override
    public int hashCode() {
        return super.hashCode();
    }

//    @Override
//    public boolean equals(Object obj) {
//        return super.equals(obj);
//    }

    @Override
    public boolean equals(Object obj) {
        return this.num==((Objectdemo)obj).num;
    }

    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
